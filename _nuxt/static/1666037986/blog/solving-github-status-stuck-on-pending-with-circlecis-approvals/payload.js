__NUXT_JSONP__("/blog/solving-github-status-stuck-on-pending-with-circlecis-approvals", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ){return {data:[{article:{slug:"2022-10-17-solving-github-status-stuck-on-pending-with-circlecis-approvals",description:"At Anima, we are always looking for new ways to automate our workflows. One of these efforts involved creating a new CircleCI pipeline to automatically deploy some NPM packages, removing the need for tedious manual work. The plan was straightforward: once started, the pipeline would bump the version of our packages (using Lerna), build them and finally publish them on our NPM registry.",layout:"post",title:Y,author:"Federico Terzi",date:"2022-10-17T00:00:00.000Z",categories:"circle ci circleci github status pending stuck approval",social_title:Y,toc:[{id:Z,depth:L,text:_},{id:$,depth:L,text:aa},{id:ab,depth:L,text:ac},{id:ad,depth:3,text:ae},{id:af,depth:L,text:ag}],body:{type:ah,children:[{type:b,tag:k,props:{},children:[{type:a,value:ai},{type:b,tag:n,props:{href:aj,rel:[q,r,s],target:t},children:[{type:a,value:ak}]},{type:a,value:al},{type:b,tag:n,props:{href:am,rel:[q,r,s],target:t},children:[{type:a,value:an}]},{type:a,value:ao}]},{type:a,value:h},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"Given that we didn’t want to create a new release for every change pushed on "},{type:b,tag:l,props:{},children:[{type:a,value:"main"}]},{type:a,value:", we decided to use CircleCI’s manual approvals as “deployment gates”. The idea was to have the project owner decide when to perform a release by "},{type:b,tag:S,props:{},children:[{type:a,value:"approving"}]},{type:a,value:" it through the CircleCI UI."}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"In practice, this can be easily implemented by using CircleCI’s job dependencies. For example, starting from a workflow in which we always run the deploy, such as:"}]},{type:a,value:h},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:l,props:{},children:[{type:a,value:T},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" build\n"}]}]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"We could decide to only run the deploy after a manual approval with:"}]},{type:a,value:h},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:l,props:{},children:[{type:a,value:T},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"approval\n"}]}]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"With this configuration, the "},{type:b,tag:l,props:{},children:[{type:a,value:E}]},{type:a,value:" job would only be started if both the "},{type:b,tag:l,props:{},children:[{type:a,value:"build"}]},{type:a,value:" succeeded and the "},{type:b,tag:l,props:{},children:[{type:a,value:U}]},{type:a,value:" job was manually approved."}]},{type:a,value:h},{type:b,tag:N,props:{id:Z},children:[{type:b,tag:n,props:{href:"#the-problem-github-status-gets-stuck-on-pending-for-unapproved-workflows",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:_}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"This approach worked flawlessly for our use-case, except for a small (but really annoying) problem: "},{type:b,tag:O,props:{},children:[{type:a,value:"approval jobs would always appear as “pending” on GitHub statuses unless manually approved."}]},{type:a,value:" Although this was not a blocker, we lost the ability to understand at a glance which commits passed all CI checks."}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:b,tag:at,props:{alt:au,src:"\u002Fposts\u002F2022-10-17-solving-github-status-stuck-on-pending-with-circlecis-approvals\u002Fimage0.png"},children:[]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"After a bit of digging, I realized we weren’t the only ones struggling with this issue, as it was "},{type:b,tag:n,props:{href:"https:\u002F\u002Fcircleci.canny.io\u002Fcloud-feature-requests\u002Fp\u002Fshow-overall-all-checks-have-passed-status-in-github-even-on-builds-with-incompl",rel:[q,r,s],target:t},children:[{type:a,value:"one of the most requested features on CircleCI’s feedback channels"}]},{type:a,value:". Unfortunately, the thread didn’t offer any useful information or workaround, so we were stuck with this sub-optimal solution."}]},{type:a,value:h},{type:b,tag:N,props:{id:$},children:[{type:b,tag:n,props:{href:"#the-workaround-overriding-github-commit-statuses-manually",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:aa}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"Fast forward a few weeks, and I find myself developing a new CI integration. While going through the GitHub API documentation, I stumble upon the "},{type:b,tag:n,props:{href:"https:\u002F\u002Fdocs.github.com\u002Fen\u002Frest\u002Fcommits\u002Fstatuses",rel:[q,r,s],target:t},children:[{type:a,value:"GitHub’s Commit Status API"}]},{type:a,value:", which allows users to programmatically access commit statuses."}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"Among other things, you can "},{type:b,tag:S,props:{},children:[{type:a,value:"create"}]},{type:a,value:" a new commit status with this HTTP request:"}]},{type:a,value:h},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"curl \\\n  "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"X POST \\\n  "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"-H \"Accept"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" application\u002Fvnd.github+json\" \\\n  "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"-H \"Authorization"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Bearer \u003CYOUR"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"TOKEN"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:V}]},{type:a,value:"\" \\\n  https"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\u002F\u002Fapi.github.com\u002Frepos\u002FOWNER\u002FREPO\u002Fstatuses\u002FSHA \\\n  "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"d '"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:W}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"https:\u002F\u002Fexample.com\u002Fbuild\u002Fstatus\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"The build succeeded!\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"continuous-integration\u002Fjenkins\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:a,value:"'\n"}]}]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"What captures my attention is the "},{type:b,tag:l,props:{},children:[{type:a,value:P}]},{type:a,value:" field, which acts as a sort of "},{type:b,tag:S,props:{},children:[{type:a,value:"id"}]},{type:a,value:" for the commit status. While experimenting, I ask myself: what happens if you specify a "},{type:b,tag:l,props:{},children:[{type:a,value:P}]},{type:a,value:" value of an existing status? I was expecting the "},{type:b,tag:l,props:{},children:[{type:a,value:P}]},{type:a,value:" to be specific to a given GitHub’s access token, but that turned out to be an incorrect assumption. As it turns out, "},{type:b,tag:O,props:{},children:[{type:a,value:"specifying the same"}]},{type:a,value:m},{type:b,tag:O,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:P}]}]},{type:a,value:m},{type:b,tag:O,props:{},children:[{type:a,value:"of an existing status overrides the status, regardless of the entity that created it… Bingo!"}]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"We finally got a possible workaround: we could wait for CircleCI’s approval status to appear on GitHub’s commit statuses, and then override it using the above request to appear as successful."}]},{type:a,value:h},{type:b,tag:N,props:{id:ab},children:[{type:b,tag:n,props:{href:"#the-solution-a-bash-script-to-patch-commit-statuses",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:ac}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"I spent the following 20 minutes putting together a script that would:"}]},{type:a,value:h},{type:b,tag:"ol",props:{},children:[{type:a,value:h},{type:b,tag:Q,props:{},children:[{type:a,value:"Wait for the approval status to appear on the GitHub commit statuses"}]},{type:a,value:h},{type:b,tag:Q,props:{},children:[{type:a,value:"Override it with a “success” state"}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"Here it is (make sure to replace the values at the top with the correct ones):"}]},{type:a,value:h},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"#!\u002Fbin\u002Fbash"}]},{type:a,value:"\n\nset "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"e\n\n"},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"# Note that the CIRCLECI_JOB_NAME should also include the workflow name"}]},{type:a,value:"\nCIRCLECI_JOB_NAME=\"your"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"workflow\u002Fdeploy"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"approval\"\nREPO_NAME=\"your"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"repo"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"name\"\nREPO_OWNER=\"your"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"github"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"account\"\n"},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"# Note: you should also set a valid GitHub token in the GITHUB_ACCESS_TOKEN variable"}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"echo \"Patching approval job named"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" $CIRCLECI_JOB_NAME\"\n\nfor i in "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:W}]},{type:a,value:"1..10"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:a,value:"\ndo\n  echo \"waiting for status to appear"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aB}]},{type:a,value:"\"\n\n  sleep 10\n\n  curl "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"request GET \\\n    "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\u002F\u002Fapi.github.com\u002Frepos\u002F$REPO_OWNER\u002F$REPO_NAME\u002Fstatuses\u002F$CIRCLE_SHA1\" \\\n    "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" application\u002Fvnd.github.v3+json' \\\n    "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Bearer $GITHUB_ACCESS_TOKEN\" "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:V}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.json\n\n  cat commit"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.json\n  cat commit"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.json "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"r '."},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aI}]},{type:a,value:".context' "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:V}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.txt\n\n  "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"if grep -q \"ci\u002Fcircleci"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" $CIRCLECI_JOB_NAME\" \"commit"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.txt\"; then\n    echo \"status appeared"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" patching the pending state\"\n    URL=$(cat commit"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"statuses.json"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"r "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"arg name \"$CIRCLECI_JOB_NAME\" "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"c 'map(select(.context "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:" contains($name))) "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:" ."},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aI}]},{type:a,value:".target_url' "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:" head "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"1)\n\n    curl "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"request POST \\\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\u002F\u002Fapi.github.com\u002Frepos\u002F$REPO_OWNER\u002F$REPO_NAME\u002Fstatuses\u002F$CIRCLE_SHA1\" \\\n      "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" application\u002Fvnd.github.v3+json' \\\n      "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Bearer $GITHUB_ACCESS_TOKEN\" \\\n      "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"--header 'Content-Type"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" application\u002Fjson' \\\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"data '"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:W}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" \"'\"$URL\"'\""},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"Patched pending state, please visit circleCI to start the approval.\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" \"ci\u002Fcircleci"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" '\"$CIRCLECI_JOB_NAME\"'\"\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:a,value:"'\n\n    exit 0\n  fi\ndone\n\necho \"Could not patch CircleCI approval"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" timed out\"\n"}]}]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"In order for it to work, it has to be spawned roughly at the same time as the approval job, so having the same job dependencies is important. For example, starting from the case described at the top of our article, we could refactor the pipeline to:"}]},{type:a,value:h},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:l,props:{},children:[{type:a,value:T},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" patch"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"approval"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"status\n          "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" build "},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"# same dependency as approval, so that they are triggered at the same time"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"approval\n\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aB}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\n  "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"patch-deploy-approval-status"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\n    "},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"steps"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"run"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\"Patch deploy approval status\""}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"command"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,"scalar",o]},children:[{type:a,value:"\n          ... the code of the script above"}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:"h3",props:{id:ad},children:[{type:b,tag:n,props:{href:"#notes",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:ae}]},{type:a,value:h},{type:b,tag:"ul",props:{},children:[{type:a,value:h},{type:b,tag:Q,props:{},children:[{type:a,value:"You will need to have "},{type:b,tag:l,props:{},children:[{type:a,value:"jq"}]},{type:a,value:" and "},{type:b,tag:l,props:{},children:[{type:a,value:"curl"}]},{type:a,value:" installed for the script to work"}]},{type:a,value:h},{type:b,tag:Q,props:{},children:[{type:a,value:"You will need to store a GitHub token (a personal access token could work as well) in a CircleCI environment variable to for the API request to work"}]},{type:a,value:h}]},{type:a,value:h},{type:b,tag:N,props:{id:af},children:[{type:b,tag:n,props:{href:"#conclusion",ariaHidden:G,tabIndex:H},children:[{type:b,tag:c,props:{className:[I,J]},children:[]}]},{type:a,value:ag}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"After more than a month of endless pending states, we finally got our green checks back!"}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:b,tag:at,props:{alt:au,src:"\u002Fposts\u002F2022-10-17-solving-github-status-stuck-on-pending-with-circlecis-approvals\u002Fimage1.png"},children:[]}]},{type:a,value:h},{type:b,tag:k,props:{},children:[{type:a,value:"Hopefully, CircleCI will fix this behavior soon, but in the meantime, this workaround should work well for our purposes."}]}]},excerpt:{type:ah,children:[{type:b,tag:k,props:{},children:[{type:a,value:ai},{type:b,tag:n,props:{href:aj,rel:[q,r,s],target:t},children:[{type:a,value:ak}]},{type:a,value:al},{type:b,tag:n,props:{href:am,rel:[q,r,s],target:t},children:[{type:a,value:an}]},{type:a,value:ao}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002F2022-10-17-solving-github-status-stuck-on-pending-with-circlecis-approvals",extension:".md",createdAt:aJ,updatedAt:aJ}}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","-",":","\n","key","atrule","p","code"," ","a","string",",","nofollow","noopener","noreferrer","_blank","requires","\n            ","|","div","nuxt-content-highlight","pre","language-yaml","line-numbers","\n      "," build\n      ","deploy","\n          ","true",-1,"icon","icon-link","\n        ",2,"jobs","h2","strong","context","li","comment","em","    ","deploy-approval","\u003E","{","}","Solving GitHub Status stuck on Pending with CircleCI’s Approvals","the-problem-github-status-gets-stuck-on-pending-for-unapproved-workflows","The problem: GitHub status gets stuck on “Pending” for unapproved workflows","the-workaround-overriding-github-commit-statuses-manually","The workaround: overriding GitHub Commit Statuses manually","the-solution-a-bash-script-to-patch-commit-statuses","The solution: a bash script to patch Commit statuses","notes","Notes","conclusion","Conclusion","root","At ","https:\u002F\u002Fwww.animaapp.com\u002F","Anima",", we are always looking for new ways to automate our workflows. One of these efforts involved creating a new ","https:\u002F\u002Fcircleci.com\u002F","CircleCI"," pipeline to automatically deploy some NPM packages, removing the need for tedious manual work. The plan was straightforward: once started, the pipeline would bump the version of our packages (using Lerna), build them and finally publish them on our NPM registry.","type"," approval\n          "," build\n            "," deploy","img","","\"state\"","\"success\"","\"target_url\"","\"description\"","\"context\"","\n\n","...","url \"https","--header 'Accept","--header \"Authorization"," commit"," jq ","[","]","2022-10-17T20:18:22.993Z")));